<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>prof.syn Display</title>
  <style>
    body {
      background-color: #1f1f1f;
      margin: 0;
      padding: 0;
      font-family: sans-serif;
      color: white;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
    }
    img {
      max-width: 200px;
      margin-bottom: 40px;
    }
    #number {
      font-size: 4em;
    }
  </style>
</head>
<body>
  <img src="logo.png" alt="prof.syn logo" />
  <div id="number">Loading...</div>

  <script>
  const SHEET_ID = "1RKloafEUhUi2t4wPxMJxrLRcxuKFFdoAQz4MYFEqHo4";
  const API_KEY = "AIzaSyDzj_d65l8Ggunk5yE77V8msY9v_V_iEt0";
  const SHEET_NAME = "Sheet2";
  const RANGE = "A1";

  let lastValue = null;

  async function fetchNumber() {
    const timestamp = new Date().getTime();
    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${SHEET_NAME}!${RANGE}?key=${API_KEY}&t=${timestamp}`;
    try {
      const response = await fetch(url);
      const data = await response.json();
      const newValue = parseInt(data?.values?.[0]?.[0], 10);

      if (isNaN(newValue)) {
        document.getElementById("number").innerText = "No valid number";
        return;
      }

      if (lastValue === null) {
        document.getElementById("number").innerText = newValue;
        lastValue = newValue;
        return;
      }

      if (newValue !== lastValue) {
        animateNumber(lastValue, newValue);
        lastValue = newValue;
      }

    } catch (err) {
      console.error("Fetch error:", err);
      document.getElementById("number").innerText = "Error fetching";
    }
  }

  function animateNumber(from, to) {
    const element = document.getElementById("number");
    const step = from < to ? 1 : -1;
    const speed = 30; // milliseconds between updates
    let current = from;

    const interval = setInterval(() => {
      current += step;
      element.innerText = current;
      if (current === to) {
        clearInterval(interval);
      }
    }, speed);
  }

  fetchNumber();
  setInterval(fetchNumber, 10000); // every 10 seconds
</script>
</body>
</html>
